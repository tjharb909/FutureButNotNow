---
name: ‚ú® FutureButNotNow Bot Scheduler

on:
  schedule:
    - cron: 0 13 * * *     #  9:00 AM EST ‚Üí ProductBot
    - cron: 0 18 * * *     #  2:00 PM EST ‚Üí TrendParasite 1
    #- cron: 0 20 * * *     #  4:00 PM EST ‚Üí Right/Left Bot 1
    - cron: 30 22 * * *    #  6:30 PM EST ‚Üí TrendParasite 2
    #- cron: 0 23 * * *     #  7:00 PM EST ‚Üí Right/Left Bot 2 
    
  workflow_dispatch:
    inputs:
      bot:
        description: Choose the bot to run manually
        required: true
        default: trendparasite1
        type: choice
        options:
          - productbot
          - trendparasite1
          - rightleftbot1

jobs:
  productbot:
    if: (github.event_name == 'schedule' && github.event.schedule == '0 13 * * *') ||
        (github.event_name == 'workflow_dispatch' && github.event.inputs.bot == 'productbot')
    runs-on: ubuntu-latest
    name: ü§ñ Run ProductBot
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: ‚öôÔ∏è Install dependencies
        run: pip install -r productbot/requirements.txt
      - name: üöÄ Run ProductBot
        run: python productbot/productbot_git.py
      - name: üîî Notify Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"‚úÖ ProductBot just posted successfully."}' \
          "$SLACK_WEBHOOK_URL"
    env:
      OPENAI_API_KEY:      ${{ secrets.OPENAI_API_KEY }}
      TWITTER_API_KEY:     ${{ secrets.TWITTER_API_KEY }}
      TWITTER_API_SECRET:  ${{ secrets.TWITTER_API_SECRET }}
      TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
      TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}

  trendparasite1:
    if: (github.event_name == 'schedule' && github.event.schedule == '0 18 * * *') ||
        (github.event_name == 'workflow_dispatch' && github.event.inputs.bot == 'trendparasite1')
    runs-on: ubuntu-latest
    name: üß† Run TrendParasite (Afternoon)
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      # üì¶ ‚ûä restore (and later update) trend-history cache
      - name: üì¶ Restore trend history
        uses: actions/cache@v4
        with:
          path: .cache
          key: reddit-trend-history-${{ github.run_number }}
          restore-keys: reddit-trend-history-

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: ‚öôÔ∏è Install dependencies
        run: pip install -r trendparasite/requirements.txt
      - name: üöÄ Run TrendParasite 1
        run: python trendparasite/trend_sniffer.py
      - name: üîî Notify Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"üß† TrendParasite (Afternoon) completed successfully."}' \
          "$SLACK_WEBHOOK_URL"
    env:
      OPENAI_API_KEY:         ${{ secrets.OPENAI_API_KEY }}
      TWITTER_API_KEY:        ${{ secrets.TWITTER_API_KEY }}
      TWITTER_API_SECRET:     ${{ secrets.TWITTER_API_SECRET }}
      TWITTER_ACCESS_TOKEN:   ${{ secrets.TWITTER_ACCESS_TOKEN }}
      TWITTER_ACCESS_SECRET:  ${{ secrets.TWITTER_ACCESS_SECRET }}
      REDDIT_CLIENT_ID:       ${{ secrets.REDDIT_CLIENT_ID }}
      REDDIT_CLIENT_SECRET:   ${{ secrets.REDDIT_CLIENT_SECRET }}
      REDDIT_USERNAME:        ${{ secrets.REDDIT_USERNAME }}
      REDDIT_PASSWORD:        ${{ secrets.REDDIT_PASSWORD }}
      REDDIT_USER_AGENT:      ${{ secrets.REDDIT_USER_AGENT }}
      TREND_HISTORY_FILE:     .cache/used_trends.json   # ‚ûã tells script where to save

  trendparasite2:
    if: (github.event_name == 'schedule' && github.event.schedule == '30 22 * * *') ||
        (github.event_name == 'workflow_dispatch' && github.event.inputs.bot == 'trendparasite2')
    runs-on: ubuntu-latest
    name: üß† Run TrendParasite (Evening)
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      # üì¶ ‚ûå restore / update cache (same as above)
      - name: üì¶ Restore trend history
        uses: actions/cache@v4
        with:
          path: .cache
          key: reddit-trend-history-${{ github.run_number }}
          restore-keys: reddit-trend-history-

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: ‚öôÔ∏è Install dependencies
        run: pip install -r trendparasite/requirements.txt
      - name: üöÄ Run TrendParasite 2
        run: python trendparasite/trend_sniffer.py
      - name: üîî Notify Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"üß† TrendParasite (Evening) completed successfully."}' \
          "$SLACK_WEBHOOK_URL"
    env:
      OPENAI_API_KEY:         ${{ secrets.OPENAI_API_KEY }}
      TWITTER_API_KEY:        ${{ secrets.TWITTER_API_KEY }}
      TWITTER_API_SECRET:     ${{ secrets.TWITTER_API_SECRET }}
      TWITTER_ACCESS_TOKEN:   ${{ secrets.TWITTER_ACCESS_TOKEN }}
      TWITTER_ACCESS_SECRET:  ${{ secrets.TWITTER_ACCESS_SECRET }}
      REDDIT_CLIENT_ID:       ${{ secrets.REDDIT_CLIENT_ID }}
      REDDIT_CLIENT_SECRET:   ${{ secrets.REDDIT_CLIENT_SECRET }}
      REDDIT_USERNAME:        ${{ secrets.REDDIT_USERNAME }}
      REDDIT_PASSWORD:        ${{ secrets.REDDIT_PASSWORD }}
      REDDIT_USER_AGENT:      ${{ secrets.REDDIT_USER_AGENT }}
      TREND_HISTORY_FILE:     .cache/used_trends.json   # ‚ûç same pointer

 



      
