---
name: ✨ FutureButNotNow Bot Scheduler
on:
  schedule:
    - cron: 0 13 * * *
    - cron: 0 18 * * *
    - cron: 30 22 * * *
  workflow_dispatch:
    inputs:
      bot:
        description: Choose the bot to run manually
        required: true
        default: productbot
        type: choice
        options:
          - productbot
          - trendparasite1
          - trendparasite2
jobs:
  productbot:
    if: (github.event_name == 'schedule'        && github.event.schedule == '0 13 *
      * *') || (github.event_name == 'workflow_dispatch' &&
      github.event.inputs.bot == 'productbot')
    runs-on: ubuntu-latest
    name: 🤖 Run ProductBot
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: ⚙️ Install dependencies
        run: pip install -r productbot/requirements.txt
      - name: 🚀 Run ProductBot
        run: python productbot/productbot_git.py
      - name: 🔔 Notify Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"✅ ProductBot just posted successfully."}' \
          "$SLACK_WEBHOOK_URL"
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
      TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
      TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
      TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}
  trendparasite1:
    if: (github.event_name == 'schedule'        && github.event.schedule == '0 18 *
      * *') || (github.event_name == 'workflow_dispatch' &&
      github.event.inputs.bot == 'trendparasite1')
    runs-on: ubuntu-latest
    name: 🧠 Run TrendParasite (Afternoon)
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: ⚙️ Install dependencies
        run: pip install -r trendparasite/requirements.txt
      - name: 🚀 Run TrendParasite 1
        run: python trendparasite/trend_sniffer.py
      - name: 🔔 Notify Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: >
          curl -X POST -H 'Content-type: application/json' \

          --data '{"text":"🧠 TrendParasite (Afternoon) completed successfully."}' \

          "$SLACK_WEBHOOK_URL"
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
      TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
      TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
      TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}
      REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
      REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
      REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
      REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
      REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
  trendparasite2:
    if: (github.event_name == 'schedule'        && github.event.schedule == '30 22 *
      * *') || (github.event_name == 'workflow_dispatch' &&
      github.event.inputs.bot == 'trendparasite2')
    runs-on: ubuntu-latest
    name: 🧠 Run TrendParasite (Evening)
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: ⚙️ Install dependencies
        run: pip install -r trendparasite/requirements.txt
      - name: 🚀 Run TrendParasite 2
        run: python trendparasite/trend_sniffer.py
      - name: 🔔 Notify Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: >
          curl -X POST -H 'Content-type: application/json' \

          --data '{"text":"🧠 TrendParasite (Evening) completed successfully."}' \

          "$SLACK_WEBHOOK_URL"
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
      TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
      TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
      TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}
      REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
      REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
      REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
      REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
      REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
